import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as i,e as p}from"./app.b0df6560.js";const r={},h=p('<h1 id="高并发系统有哪些关键指标" tabindex="-1"><a class="header-anchor" href="#高并发系统有哪些关键指标" aria-hidden="true">#</a> 高并发系统有哪些关键指标</h1><p>在设计一个系统或在对已有系统进行性能评估时，需要具备相应的参考指标，然后基于这些参考指标对系统进行针对性的优化，使得系统更健壮，以及具备更高的性能。接下来看看高并发系统都需要关注哪些关键指标。</p><h3 id="响应时间-response-time" tabindex="-1"><a class="header-anchor" href="#响应时间-response-time" aria-hidden="true">#</a> 响应时间（Response Time）</h3><p>响应时间，是指从第一次发出请求到收到系统完整响应数据所需的时间。响应时间是反映系统性能的重要指标，直接反映了系统响应的快慢。</p><ul><li>从用户角度出发，响应时间决定着用户的体验感：响应时间越长，用户体验感越差，就会造成用户的流失；响应时间越短，用户体验感越好，有助于提高用户留存率。</li><li>从系统本身的角度出发，响应时间决定着系统的性能问题：响应时间越短，系统性能越高，即能更好地处理业务；响应时间越长，系统性能越差，甚至可能会丢失天相关请求或者出现系统不可用，从而影响公司业务。</li></ul><h3 id="吞吐量-throughput" tabindex="-1"><a class="header-anchor" href="#吞吐量-throughput" aria-hidden="true">#</a> 吞吐量（Throughput）</h3><p>吞吐量指单位时间内系统所处理的用户请求数。</p><ul><li>从业务角度看，吞吐量可以用“请求数/秒”、“人数/天” 或 “处理业务数/小时”等单位来衡量</li><li>从网络角度看，吞吐量可以用“字节数/秒”来衡量</li></ul><p>对互联网应用来说，吞吐量能够直接反应系统的负载能力</p><p>采用不同方式表达的吞吐量，可以说明不同层次的问题，如：采用“请求数/秒”方式的吞吐量，测说明瓶颈主要来源于应用服务器和应用本身；采用“字节数/秒”方式的吞吐量，则可以说明瓶颈主要来源于网络基础设施、服务器架构和应用服务器约束等。</p><p>在没有遇到性能瓶颈时，吞吐量与虚拟用户数之间存在一定的联系，可以采用一下公式计算吞吐量：</p><p><img src="http://dean-imgsubmit.oss-cn-beijing.aliyuncs.com/note/image-20230324205234605.png" alt="image-20230324205234605" loading="lazy"></p><p>其中，F 表示吞吐量。VU 表示虚拟用户个数，R 表示每个虚拟用户发出的请求数，T表示虚拟测试所用的时间。</p><h3 id="每秒请求数-qps" tabindex="-1"><a class="header-anchor" href="#每秒请求数-qps" aria-hidden="true">#</a> 每秒请求数（QPS）</h3><p>QPS 指服务器在一秒内共处理了多少个请求，主要用来表示“读”请求。</p><p>在系统上线前，一般怎么预估系统 QPS 呢？绝大部分系统在白天的请求量都较大，所以，这里假设以白天来计算 QPS。依据二八原则，80% 的流量是在 20% 的时间段内产生的。</p><p>例如，现在每天有 5000000 个请求，预估 QPS = ( 5 000 000 x 0.8 ) / (12 x 60 x 60 x 0.2 ) = 462。即当前系统每天平均 QPS 为462。当然，为了保险起见，再预留个 20% 左右也是可以的。一股还需要计算当天最高 QPS，这样对系统的掌控力度更强。</p><p>系统最高 QPS，可以通过系统平均 QPS 的倍数计算出来。例如，分析业务得到最高 QPS 大概是平均 QPS 的 2倍，則当前系统峰值 QPS 力 924左右。</p><p>在预估出 QPS 后，用“峰值 QPS / 单台机器最高可承受的 QPS”就能计算出需要部署多少台服务器。即：</p><blockquote><p>机器数 ＝ 峰值 QPS／ 单台机器最高可承受的 QPS</p></blockquote><p>单台最高可承受的 QPS 可以通过压测来得出。假设单台机器压测得出最高可承受的 QPS 为100，則所需要的机器数量方：924/100=11台。</p><h3 id="每秒事务数" tabindex="-1"><a class="header-anchor" href="#每秒事务数" aria-hidden="true">#</a> 每秒事务数</h3><p>TPS 即服务器每秒处理的事务数。TPS 包括以下 3 个过程：</p><ol><li>客户端请求服务端</li><li>在服务端内部进行业务逻辑处理</li><li>服务端响应客户端</li></ol><p>一个事务包括“客户端向服务器发送请求 ＋服务器响应”的过程。在容户端发送请求时开始计时，在容户端收到服务器响应后结束计时，以此来计算使用的时间和完成的事务个数。</p><p>TPS 与 QPS 区别是什么呢？QPS 类似于 TPS，但也有不同之处。例如：当用户访问一个完整页面时，请求＋响应的整个过程就是一个TPS；但是，这一次完整的页面请求可能产生多次对服务器的请求，这些请求应计入QPS。</p><p>假设访问一个页面时会请求服务器3次，这样的一次访问会产生1个TPS、3个QPS。</p><h3 id="访问量-pv" tabindex="-1"><a class="header-anchor" href="#访问量-pv" aria-hidden="true">#</a> 访问量（PV）</h3><p>PV ( Page View）指页面浏览量。用户每对网站中的1个网页访问1次均被记录1次。用户对同一个页面的多次访问被累计记录。PV 是评价网站流量最常用的指标之一。</p><h3 id="独立访客-uv" tabindex="-1"><a class="header-anchor" href="#独立访客-uv" aria-hidden="true">#</a> 独立访客（UV）</h3><p>UV ( Unique Visitor）指访问某个站点或点击某个链接的不同 IP 地址数。</p><p>在同一天内，UV 只记录第一次进入网站的具有独立 IP 地址的访问者，在同一天内访问者再次访问该网站则不计数。独立 IP 地址访问者相当于携带了 “身份证” 进入网站，它能反映在一定时间内有多少独立客户端进行了访问。</p><p>一个UV可以有很多个 PV，一个 PV 也可以对应一个 IP。例如，对网站访问一次，则网站的 UV 就加1；这一次访问了该网站的两个页面，则网站的 PV 加2；对其中一个网页又刷新了一次，则 PV 再加1。</p><h3 id="网络流量" tabindex="-1"><a class="header-anchor" href="#网络流量" aria-hidden="true">#</a> 网络流量</h3><p>因为受限于带宽，所以网络流量（也简称流量）是并发情况的一个重要指标，主要涉及以下两方面。</p><ul><li>流入流量：从外部访问服务器所消耗的流量。</li><li>流出流量：服务器对外响应的流量。</li></ul>',36),t=[h];function d(l,n){return a(),i("div",null,t)}const P=e(r,[["render",d],["__file","高并发系统有哪些关键指标.html.vue"]]);export{P as default};
