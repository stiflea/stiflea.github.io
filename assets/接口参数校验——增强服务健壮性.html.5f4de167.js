import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as s,a as t}from"./app.aeca88a9.js";const e={},p=t(`<h1 id="接口参数校验——增强服务健壮性" tabindex="-1"><a class="header-anchor" href="#接口参数校验——增强服务健壮性" aria-hidden="true">#</a> 接口参数校验——增强服务健壮性</h1><p>随着互联网行业的高速发展，前后端分离的模式已经越来越流行，连接前端与后端的桥梁是接口。因此，在每个系统内都会定义很多的接口，以及接口所需要的参数信息。大部分接口都对参数有特殊的要求，只有经过校验的参数才能进行后续的操作。</p><p>那么，是“先由前端进行参数校验，然后请求接口即可进行实际的后端操作”，还是 “除前端需要进行参数校验外，接口也需要进行参数校验”呢？ 为了提高接口的稳定性和健壮性，接口的参数校验显得尤为重要。</p><h2 id="【实战】spring-结合-validation-进行接口参数校验" tabindex="-1"><a class="header-anchor" href="#【实战】spring-结合-validation-进行接口参数校验" aria-hidden="true">#</a> 【实战】Spring 结合 Validation 进行接口参数校验</h2><p>接口对于参数的校验有多种标准，例如，有些参数有最大值和最小值的约束，有些参数有必须为数字的约束，有些参数有心须为手机号或电子邮箱的约束，有些参数有必须为身份证号的约束等。</p><p>对于这些不同的约束，后端接口该如何优雅地进行参数校验参数呢？可以使用 Spring 组合符合 JSR303 标准的 Validation（一个 Java 的数据校验包） 优雅、高效地校验参数。下面来看一下具体该如何使用。</p><h3 id="spring-结合-validation-迸行参数校验" tabindex="-1"><a class="header-anchor" href="#spring-结合-validation-迸行参数校验" aria-hidden="true">#</a> Spring 结合 Validation 迸行参数校验</h3><p>Validation 中的注解都位于“javax.validallon.constraints” 包内</p><table><thead><tr><th>注解</th><th>含义</th></tr></thead><tbody><tr><td>@AssertFalse</td><td>必须为 False</td></tr><tr><td>@AssertTrue</td><td>必须为 Ture</td></tr><tr><td>@DecimalMax(value)</td><td>不大于指定 value 的数字</td></tr><tr><td>@DecimalMin(value)</td><td>不小于指定 value 的数字</td></tr><tr><td>@Digits(integer,fraction)</td><td>小数，整数部分不超过 integer，小数部分不超过 fraction</td></tr><tr><td>@Email</td><td>邮箱</td></tr><tr><td>@Future</td><td>将来的日期</td></tr><tr><td>@FutureOrPresent</td><td>当前或将来的时间</td></tr><tr><td>@Max(value)</td><td>不大于 value 的数</td></tr><tr><td>@Min(value)</td><td>不小于 value 的数</td></tr><tr><td>@NotBlank</td><td>不能为 Blank</td></tr><tr><td>@NotEmpty</td><td>不能为 Empty</td></tr><tr><td>@NotNull</td><td>不能为 null</td></tr><tr><td>@Null</td><td>必须为 null</td></tr><tr><td>@Past</td><td>过去的时间</td></tr><tr><td>@PastOrPresent</td><td>过去或现在的时间</td></tr><tr><td>@Pattern(value)</td><td>符合 value 的正则表达式</td></tr><tr><td>@Size(min.max)</td><td>介于 min 和 max 之间的元素</td></tr></tbody></table><p>SpringBoot 依赖引入</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-validation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在实体类上增加注解</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MemberSaveReq</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Size</span><span class="token punctuation">(</span>min <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> max <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@NotNull</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;密码不能为空&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> nickname<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> mobile<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Email</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> header<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> gender<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Past</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> birth<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在Controller上增加注解</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;save&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">IResponseMsg</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token annotation punctuation">@Validated</span> <span class="token class-name">MemberSaveReq</span> req<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Member</span> member <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Member</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>member<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">ServiceMsg</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>memberService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>member<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="validation-的校验流程" tabindex="-1"><a class="header-anchor" href="#validation-的校验流程" aria-hidden="true">#</a> @Validation 的校验流程</h3><p><img src="https://cdn.jsdelivr.net/gh/stiflea/stiflea-img@main/dean/image-20230328225131714.png" alt="image-20230328225131714" loading="lazy"></p><h2 id="【实战】自定义参数校验注解" tabindex="-1"><a class="header-anchor" href="#【实战】自定义参数校验注解" aria-hidden="true">#</a> 【实战】自定义参数校验注解</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Documented</span>
<span class="token annotation punctuation">@Constraint</span><span class="token punctuation">(</span>validatedBy <span class="token operator">=</span> <span class="token class-name">PhoneNumberValidator</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">FIELD</span><span class="token punctuation">,</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">PARAMETER</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">PhoneNumber</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> <span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;无效的手机号码&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">groups</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PhoneNumberValidator</span> <span class="token keyword">implements</span> <span class="token class-name">ConstraintValidator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PhoneNumber</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValid</span><span class="token punctuation">(</span><span class="token class-name">String</span> phone<span class="token punctuation">,</span> <span class="token class-name">ConstraintValidatorContext</span> constraintValidatorContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>phone <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> phone<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token string">&quot;[0-9]+&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> phone<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">8</span> <span class="token operator">&amp;&amp;</span> phone<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">14</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20),o=[p];function c(l,i){return a(),s("div",null,o)}const r=n(e,[["render",c],["__file","接口参数校验——增强服务健壮性.html.vue"]]);export{r as default};
