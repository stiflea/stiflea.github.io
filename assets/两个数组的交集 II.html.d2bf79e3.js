const e=JSON.parse('{"key":"v-6e893377","path":"/notes/%E7%AE%97%E6%B3%95/%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86%20II.html","title":"两个数组的交集 II","lang":"zh-CN","frontmatter":{"title":"两个数组的交集 II","author":"ouka","watermark":true,"description":"给定两个数组，编写一个函数来计算它们的交集。 示例 1 示例 2 说明: 输出结果中每个元素出现的次数，应与元素在两个数组中出现次数的最小值一致。; 我们可以不考虑输出结果的顺序。; 进阶: 如果给定的数组已经排好序呢？你将如何优化你的算法？; 如果 nums1 的大小比 nums2 小很多，哪种方法更优？; 如果 nums2 的元素存储在磁盘上，内存...","head":[["meta",{"property":"og:url","content":"https://stilfea.github.io/notes/%E7%AE%97%E6%B3%95/%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86%20II.html"}],["meta",{"property":"og:site_name","content":"窒息"}],["meta",{"property":"og:title","content":"两个数组的交集 II"}],["meta",{"property":"og:description","content":"给定两个数组，编写一个函数来计算它们的交集。 示例 1 示例 2 说明: 输出结果中每个元素出现的次数，应与元素在两个数组中出现次数的最小值一致。; 我们可以不考虑输出结果的顺序。; 进阶: 如果给定的数组已经排好序呢？你将如何优化你的算法？; 如果 nums1 的大小比 nums2 小很多，哪种方法更优？; 如果 nums2 的元素存储在磁盘上，内存..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-29T15:43:18.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"ouka"}],["meta",{"property":"article:modified_time","content":"2023-03-29T15:43:18.000Z"}]]},"excerpt":"","headers":[],"git":{"createdTime":1679653001000,"updatedTime":1680104598000,"contributors":[{"name":"akuowen","email":"akuowen2023@gmail.com","commits":2},{"name":"dean","email":"chenyunlong99@outlook.com","commits":2},{"name":"dean","email":"chenyl@ppwrite.com","commits":1},{"name":"ouka","email":"sizheng@ouka.club","commits":1}]},"readingTime":{"minutes":0.94,"words":283},"autoDesc":true,"filePathRelative":"notes/算法/两个数组的交集 II.md","localizedDate":"2023年3月24日"}');export{e as data};
