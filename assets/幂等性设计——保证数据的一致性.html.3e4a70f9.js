const e=JSON.parse('{"key":"v-446c31cf","path":"/notes/%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F%E5%AE%9E%E6%88%98/%E7%94%9F%E4%BA%A7%E7%BA%A7%E7%B3%BB%E7%BB%9F%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1%E7%9A%84%E7%BB%86%E8%8A%82/%E5%B9%82%E7%AD%89%E6%80%A7%E8%AE%BE%E8%AE%A1%E2%80%94%E2%80%94%E4%BF%9D%E8%AF%81%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7.html","title":"幂等性设计——保证数据的一致性","lang":"zh-CN","frontmatter":{"title":"幂等性设计——保证数据的一致性","author":"陈清华","isOriginal":true,"watermark":true,"description":"先看这样一个场景：用户在电商平台购物，看到自己心仪的商品，于是将其加入购物车，之后进入购物车下单结算。这时，由于网络不畅，用户在点击“提交订单” 按钮时卡住了，用户以为没提交成功，就又点击了一次“提交订单”按钮。最终，订单系统给该用户生成了两个订单，其实之前那个订单己经生成成功了。 这就是一个典型的幂等性问题。由于下单接口没有做好幂等性设计，导致用户进...","head":[["meta",{"property":"og:url","content":"https://stilfea.github.io/notes/%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F%E5%AE%9E%E6%88%98/%E7%94%9F%E4%BA%A7%E7%BA%A7%E7%B3%BB%E7%BB%9F%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1%E7%9A%84%E7%BB%86%E8%8A%82/%E5%B9%82%E7%AD%89%E6%80%A7%E8%AE%BE%E8%AE%A1%E2%80%94%E2%80%94%E4%BF%9D%E8%AF%81%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7.html"}],["meta",{"property":"og:site_name","content":"窒息"}],["meta",{"property":"og:title","content":"幂等性设计——保证数据的一致性"}],["meta",{"property":"og:description","content":"先看这样一个场景：用户在电商平台购物，看到自己心仪的商品，于是将其加入购物车，之后进入购物车下单结算。这时，由于网络不畅，用户在点击“提交订单” 按钮时卡住了，用户以为没提交成功，就又点击了一次“提交订单”按钮。最终，订单系统给该用户生成了两个订单，其实之前那个订单己经生成成功了。 这就是一个典型的幂等性问题。由于下单接口没有做好幂等性设计，导致用户进..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-29T15:43:18.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"陈清华"}],["meta",{"property":"article:modified_time","content":"2023-03-29T15:43:18.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"什么是幂等性","slug":"什么是幂等性","link":"#什么是幂等性","children":[{"level":3,"title":"需要幂等性的场景","slug":"需要幂等性的场景","link":"#需要幂等性的场景","children":[]},{"level":3,"title":"数据库操作的幂等性分析","slug":"数据库操作的幂等性分析","link":"#数据库操作的幂等性分析","children":[]}]},{"level":2,"title":"如何保证接口的幂等性","slug":"如何保证接口的幂等性","link":"#如何保证接口的幂等性","children":[{"level":3,"title":"利用全局唯一 ID 防止重复提交","slug":"利用全局唯一-id-防止重复提交","link":"#利用全局唯一-id-防止重复提交","children":[]},{"level":3,"title":"利用 Token + Redis 机制防止重复提交","slug":"利用-token-redis-机制防止重复提交","link":"#利用-token-redis-机制防止重复提交","children":[]}]}],"git":{"createdTime":1680015673000,"updatedTime":1680104598000,"contributors":[{"name":"dean","email":"chenyunlong99@outlook.com","commits":2},{"name":"akuowen","email":"akuowen2023@gmail.com","commits":1},{"name":"dean","email":"chenyl@ppwrite.com","commits":1}]},"readingTime":{"minutes":6.16,"words":1848},"autoDesc":true,"filePathRelative":"notes/高并发系统实战/生产级系统框架设计的细节/幂等性设计——保证数据的一致性.md","localizedDate":"2023年3月28日"}');export{e as data};
